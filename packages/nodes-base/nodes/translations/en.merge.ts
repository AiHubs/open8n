module.exports = {'en':{'merge':{'displayName':'Merge','description':'Merges data of multiple streams once data of both is available','parameters':{'mode':{'name':'mode','displayName':'Mode','description':'How data of branches should be merged.','options':{'append':{'displayName':'Append','description':'Combines data of both inputs. The output will contain items of input 1 and input 2.'},'keepKeyMatches':{'displayName':'Keep Key Matches','description':'Keeps data of input 1 if it does find a match with data of input 2.'},'mergeByIndex':{'displayName':'Merge By Index','description':'Merges data of both inputs. The output will contain items of input 1 merged with data of input 2. Merge happens depending on the index of the items. So first item of input 1 will be merged with first item of input 2 and so on.'},'mergeByKey':{'displayName':'Merge By Key','description':'Merges data of both inputs. The output will contain items of input 1 merged with data of input 2. Merge happens depending on a defined key.'},'multiplex':{'displayName':'Multiplex','description':'Merges each value of one input with each value of the other input. The output will contain (m * n) items where (m) and (n) are lengths of the inputs.'},'passThrough':{'displayName':'Pass-through','description':'Passes through data of one input. The output will contain only items of the defined input.'},'removeKeyMatches':{'displayName':'Remove Key Matches','description':'Keeps data of input 1 if it does NOT find match with data of input 2.'},'wait':{'displayName':'Wait','description':'Waits till data of both inputs is available and will then output a single empty item. Source Nodes must connect to both Input 1 and 2. This node only supports 2 Sources, if you need more Sources, connect multiple Merge nodes in series. This node will not output any data.'}}},'join':{'name':'join','displayName':'Join','description':'How many items the output will contain<br />if inputs contain different amount of items.','options':{'inner':{'displayName':'Inner Join','description':'Merges as many items as both inputs contain. (Example: Input1 = 5 items, Input2 = 3 items | Output will contain 3 items)'},'left':{'displayName':'Left Join','description':'Merges as many items as first input contains. (Example: Input1 = 3 items, Input2 = 5 items | Output will contain 3 items)'},'outer':{'displayName':'Outer Join','description':'Merges as many items as input contains with most items. (Example: Input1 = 3 items, Input2 = 5 items | Output will contain 5 items)'}}},'propertyName1':{'name':'propertyName1','displayName':'Property Input 1','description':'Name of property which decides which items to merge of input 1.','options':{}},'propertyName2':{'name':'propertyName2','displayName':'Property Input 2','description':'Name of property which decides which items to merge of input 2.','options':{}},'output':{'name':'output','displayName':'Output Data','description':'Defines of which input the data should be used as output of node.','options':{'input1':{'displayName':'Input 1'},'input2':{'displayName':'Input 2'}}},'overwrite':{'name':'overwrite','displayName':'Overwrite','description':'Select when to overwrite the values from Input1 with values from Input 2.','options':{'always':{'displayName':'Always','description':'Always overwrites everything.'},'blank':{'displayName':'If Blank','description':'Overwrites only values of "null", "undefined" or empty string.'},'undefined':{'displayName':'If Missing','description':'Only adds values which do not exist yet.'}}}},'credentials':{}}}};