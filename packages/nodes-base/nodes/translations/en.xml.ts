module.exports = {'en':{'xml':{'displayName':'XML','description':'Convert data from and to XML','parameters':{'mode':{'name':'mode','displayName':'Mode','description':'From and to what format the data should be converted.','options':{'jsonToxml':{'displayName':'JSON to XML','description':'Converts data from JSON to XML.'},'xmlToJson':{'displayName':'XML to JSON','description':'Converts data from XML to JSON'}}},'dataPropertyName':{'name':'dataPropertyName','displayName':'Property Name','description':'Name of the property which contains<br />the XML data to convert.','options':{}},'options':{'name':'options','displayName':'Options','placeholder':'Add Option','options':{'attrkey':{'displayName':'Attribute Key','description':'Prefix that is used to access the attributes.'},'charkey':{'displayName':'Character Key','description':'Prefix that is used to access the character content.'},'explicitArray':{'displayName':'Explicit Array','description':'Always put child nodes in an array if true; otherwise an array is created only if there is more than one.'},'explicitRoot':{'displayName':'Explicit Root','description':'Set this if you want to get the root node in the resulting object.'},'ignoreAttrs':{'displayName':'Ignore Attributes','description':'Ignore all XML attributes and only create text nodes.'},'mergeAttrs':{'displayName':'Merge Attributes','description':'Merge attributes and child elements as properties of the parent, instead of keying attributes off a child attribute object. This option is ignored if ignoreAttrs is true.'},'normalize':{'displayName':'Normalize','description':'Trim whitespaces inside text nodes.'},'normalizeTags':{'displayName':'Normalize Tags','description':'Normalize all tag names to lowercase.'},'trim':{'displayName':'Trim','description':'Trim the whitespace at the beginning and end of text nodes.'}}}},'credentials':{}}}};