module.exports = {'en':{'httpRequest':{'displayName':'HTTP Request','description':'Makes a HTTP request and returns the received data','parameters':{'authentication':{'name':'authentication','displayName':'Authentication','description':'The way to authenticate.','options':{'basicAuth':{'displayName':'Basic Auth'},'digestAuth':{'displayName':'Digest Auth'},'headerAuth':{'displayName':'Header Auth'},'oAuth1':{'displayName':'OAuth1'},'oAuth2':{'displayName':'OAuth2'},'none':{'displayName':'None'}}},'requestMethod':{'name':'requestMethod','displayName':'Request Method','description':'The request method to use.','options':{'DELETE':{'displayName':'DELETE'},'GET':{'displayName':'GET'},'HEAD':{'displayName':'HEAD'},'PATCH':{'displayName':'PATCH'},'POST':{'displayName':'POST'},'PUT':{'displayName':'PUT'}}},'url':{'name':'url','displayName':'URL','description':'The URL to make the request to.','placeholder':'http://example.com/index.html','options':{}},'allowUnauthorizedCerts':{'name':'allowUnauthorizedCerts','displayName':'Ignore SSL Issues','description':'Still download the response even if SSL certificate validation is not possible.','options':{}},'responseFormat':{'name':'responseFormat','displayName':'Response Format','description':'The format in which the data gets returned from the URL.','options':{'file':{'displayName':'File'},'json':{'displayName':'JSON'},'string':{'displayName':'String'}}},'dataPropertyName':{'name':'dataPropertyName','displayName':'Binary Property','description':'Name of the binary property to which to<br />write the data of the read file.','options':{}},'jsonParameters':{'name':'jsonParameters','displayName':'JSON/RAW Parameters','description':'If the query and/or body parameter should be set via the value-key pair UI or JSON/RAW.','options':{}},'options':{'name':'options','displayName':'Options','placeholder':'Add Option','options':{'batchInterval':{'displayName':'Batch Interval','description':'Time (in milliseconds) between each batch of requests. 0 for disabled.'},'batchSize':{'displayName':'Batch Size','description':'Input will be split in batches to throttle requests. -1 for disabled. 0 will be treated as 1.'},'bodyContentType':{'displayName':'Body Content Type','description':'Content-Type to use to send body parameters.'},'fullResponse':{'displayName':'Full Response','description':'Returns the full reponse data instead of only the body.'},'followRedirect':{'displayName':'Follow Redirect','description':'Follow HTTP 3xx redirects.'},'ignoreResponseCode':{'displayName':'Ignore Response Code','description':'Succeeds also when status code is not 2xx.'},'bodyContentCustomMimeType':{'displayName':'MIME Type','description':'Specify the mime type for raw/custom body type.'},'proxy':{'displayName':'Proxy','description':'HTTP proxy to use.'},'timeout':{'displayName':'Timeout','description':'Time in ms to wait for the server to send response headers (and start the response body) before aborting the request.'},'useQueryString':{'displayName':'Use Querystring','description':'Set this option to true if you need arrays to be serialized as foo=bar&foo=baz instead of the default foo[0]=bar&foo[1]=baz.'}}},'sendBinaryData':{'name':'sendBinaryData','displayName':'Send Binary Data','description':'If binary data should be send as body.','options':{}},'binaryPropertyName':{'name':'binaryPropertyName','displayName':'Binary Property','description':'Name of the binary property which contains the data for the file to be uploaded.<br />\n\t\t\t\t\t\t\tFor Form-Data Multipart, multiple can be provided in the format:<br />\n\t\t\t\t\t\t\t"sendKey1:binaryProperty1,sendKey2:binaryProperty2','options':{}},'bodyParametersJson':{'name':'bodyParametersJson','displayName':'Body Parameters','description':'Body parameters as JSON or RAW.','options':{}},'bodyParametersUi':{'name':'bodyParametersUi','displayName':'Body Parameters','description':'The body parameter to send.','placeholder':'Add Parameter','options':{'parameter':{'displayName':'Parameter'}}},'headerParametersJson':{'name':'headerParametersJson','displayName':'Headers','description':'Header parameters as JSON or RAW.','options':{}},'headerParametersUi':{'name':'headerParametersUi','displayName':'Headers','description':'The headers to send.','placeholder':'Add Header','options':{'parameter':{'displayName':'Header'}}},'queryParametersJson':{'name':'queryParametersJson','displayName':'Query Parameters','description':'Query parameters as JSON (flat object).','options':{}},'queryParametersUi':{'name':'queryParametersUi','displayName':'Query Parameters','description':'The query parameter to send.','placeholder':'Add Parameter','options':{'parameter':{'displayName':'Parameter'}}}},'credentials':{'httpBasicAuth':{'user':{'displayName':'User'},'password':{'displayName':'Password'}},'httpDigestAuth':{'user':{'displayName':'User'},'password':{'displayName':'Password'}},'httpHeaderAuth':{'name':{'displayName':'Name'},'value':{'displayName':'Value'}},'oAuth1Api':{'authUrl':{'displayName':'Authorization URL'},'accessTokenUrl':{'displayName':'Access Token URL'},'consumerKey':{'displayName':'Consumer Key'},'consumerSecret':{'displayName':'Consumer Secret'},'requestTokenUrl':{'displayName':'Request Token URL'},'signatureMethod':{'displayName':'Signature Method'}},'oAuth2Api':{'authUrl':{'displayName':'Authorization URL'},'accessTokenUrl':{'displayName':'Access Token URL'},'clientId':{'displayName':'Client ID'},'clientSecret':{'displayName':'Client Secret'},'scope':{'displayName':'Scope'},'authQueryParameters':{'displayName':'Auth URI Query Parameters','description':'For some services additional query parameters have to be set which can be defined here.'},'authentication':{'displayName':'Authentication','description':'Resource to consume.'}}}}}};