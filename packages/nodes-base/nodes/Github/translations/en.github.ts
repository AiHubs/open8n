module.exports = {'en':{'github':{'displayName':'GitHub','description':'Consume GitHub API.','parameters':{'authentication':{'name':'authentication','displayName':'Authentication','description':'The resource to operate on.','options':{'accessToken':{'displayName':'Access Token'},'oAuth2':{'displayName':'OAuth2'}}},'resource':{'name':'resource','displayName':'Resource','description':'The resource to operate on.','options':{'file':{'displayName':'File'},'issue':{'displayName':'Issue'},'repository':{'displayName':'Repository'},'release':{'displayName':'Release'},'review':{'displayName':'Review'},'user':{'displayName':'User'}}},'operation':{'name':'operation','displayName':'Operation','description':'The operation to perform.','options':{'create':{'displayName':'Create','description':'Creates a new review.'},'get':{'displayName':'Get','description':'Get a review for a pull request.'},'getAll':{'displayName':'Get All','description':'Get all reviews for a pull request.'},'update':{'displayName':'Update','description':'Update a review.'}}},'owner':{'name':'owner','displayName':'Repository Owner','description':'Owner of the repository.','placeholder':'n8n-io','options':{}},'repository':{'name':'repository','displayName':'Repository Name','description':'The name of the repository.','placeholder':'n8n','options':{}},'filePath':{'name':'filePath','displayName':'File Path','description':'The file path of the file. Has to contain the full path.','placeholder':'docs/README.md','options':{}},'binaryData':{'name':'binaryData','displayName':'Binary Data','description':'If the data to upload should be taken from binary field.','options':{}},'fileContent':{'name':'fileContent','displayName':'File Content','description':'The text content of the file.','options':{}},'binaryPropertyName':{'name':'binaryPropertyName','displayName':'Binary Property','description':'Name of the binary property in which to save<br />the binary data of the received file.','options':{}},'commitMessage':{'name':'commitMessage','displayName':'Commit Message','description':'The commit message.','options':{}},'additionalParameters':{'name':'additionalParameters','displayName':'Additional Parameters','description':'Additional fields to add.','placeholder':'Add Parameter','options':{'author':{'displayName':'Author'},'branch':{'displayName':'Branch'},'committer':{'displayName':'Committer'}}},'asBinaryProperty':{'name':'asBinaryProperty','displayName':'As Binary Property','description':'If set it will set the data of the file as binary property<br />instead of returning the raw API response.','options':{}},'title':{'name':'title','displayName':'Title','description':'The title of the issue.','options':{}},'body':{'name':'body','displayName':'Body','description':'The body of the review','options':{}},'labels':{'name':'labels','displayName':'Labels','options':{'label':{'displayName':'Label','description':'Label to add to issue.'}}},'assignees':{'name':'assignees','displayName':'Assignees','options':{'assignee':{'displayName':'Assignee','description':'User to assign issue too.'}}},'issueNumber':{'name':'issueNumber','displayName':'Issue Number','description':'The number of the issue to lock.','options':{}},'editFields':{'name':'editFields','displayName':'Edit Fields','options':{'title':{'displayName':'Title','description':'The title of the issue.'},'body':{'displayName':'Body','description':'The body of the issue.'},'state':{'displayName':'State','description':'The state to set.'},'labels':{'name':'labels','displayName':'Labels','options':{'label':{'displayName':'Label','description':'Label to add to issue.'}}},'assignees':{'name':'assignees','displayName':'Assignees','options':{'assignee':{'displayName':'Assignees','description':'User to assign issue to.'}}}}},'lockReason':{'name':'lockReason','displayName':'Lock Reason','description':'The reason to lock the issue.','options':{'off-topic':{'displayName':'Off-Topic','description':'The issue is Off-Topic'},'too heated':{'displayName':'Too Heated','description':'The discussion is too heated'},'resolved':{'displayName':'Resolved','description':'The issue got resolved'},'spam':{'displayName':'Spam','description':'The issue is spam'}}},'releaseTag':{'name':'releaseTag','displayName':'Tag','description':'The tag of the release.','options':{}},'additionalFields':{'name':'additionalFields','displayName':'Additional Fields','description':'Additional fields.','placeholder':'Add Field','options':{'commitId':{'displayName':'Commit ID','description':'The SHA of the commit that needs a review, if different from the latest.'}}},'release_id':{'name':'release_id','displayName':'Release ID','description':'The release ID.','options':{}},'returnAll':{'name':'returnAll','displayName':'Return All','description':'If all results should be returned or only up to a given limit.','options':{}},'limit':{'name':'limit','displayName':'Limit','description':'How many results to return.','options':{}},'getRepositoryIssuesFilters':{'name':'getRepositoryIssuesFilters','displayName':'Filters','options':{'assignee':{'displayName':'Assignee','description':'Return only issues which are assigned to a specific user.'},'creator':{'displayName':'Creator','description':'Return only issues which were created by a specific user.'},'mentioned':{'displayName':'Mentioned','description':'Return only issues in which a specific user was mentioned.'},'labels':{'displayName':'Labels','description':'Return only issues with the given labels. Multiple lables can be separated by comma.'},'since':{'displayName':'Updated Since','description':'Return only issues updated at or after this time.'},'state':{'displayName':'State','description':'The state to set.'},'sort':{'displayName':'Sort','description':'The order the issues should be returned in.'},'direction':{'displayName':'Direction','description':'The sort order.'}}},'pullRequestNumber':{'name':'pullRequestNumber','displayName':'PR Number','description':'The number of the pull request to review.','options':{}},'reviewId':{'name':'reviewId','displayName':'Review ID','description':'ID of the review.','options':{}},'event':{'name':'event','displayName':'Event','description':'The review action you want to perform.','options':{'approve':{'displayName':'Approve','description':'Approve the pull request.'},'requestChanges':{'displayName':'Request Change','description':'Request code changes.'},'comment':{'displayName':'Comment','description':'Add a comment without approval or change requests.'},'pending':{'displayName':'Pending','description':'You will need to submit the pull request review when you are ready.'}}},'organization':{'name':'organization','displayName':'Organization','description':'The GitHub organization that the user is being invited to.','options':{}},'email':{'name':'email','displayName':'Email','description':'The email address of the invited user.','options':{}}},'credentials':{'githubApi':{'server':{'displayName':'Github Server','description':'The server to connect to. Does only have to get changed if Github Enterprise gets used.'},'user':{'displayName':'User'},'accessToken':{'displayName':'Access Token'}},'githubOAuth2Api':{'server':{'displayName':'Github Server','description':'The server to connect to. Does only have to get changed if Github Enterprise gets used.'},'authUrl':{'displayName':'Authorization URL'},'accessTokenUrl':{'displayName':'Access Token URL'},'scope':{'displayName':'Scope'},'authQueryParameters':{'displayName':'Auth URI Query Parameters'},'authentication':{'displayName':'Authentication'}}}}}};