module.exports = {'en':{'chargebeeTrigger':{'displayName':'Chargebee Trigger','description':'Starts the workflow when Chargebee events occur.','parameters':{'events':{'name':'events','displayName':'Events','description':'The operation to perform.','options':{'*':{'displayName':'*','description':'Any time any event is triggered (Wildcard Event).'},'customer_created':{'displayName':'Customer Created','description':'Triggered when a customer is created.'},'customer_changed':{'displayName':'Customer Changed','description':'Triggered when a customer is changed.'},'customer_deleted':{'displayName':'Customer Deleted','description':'Triggered when a customer is deleted.'},'subscription_created':{'displayName':'Subscription Created','description':'Triggered when a new subscription is created.'},'subscription_started':{'displayName':'Subscription Started','description':'Triggered when a "future" subscription gets started.'},'subscription_trial_ending':{'displayName':'Subscription Trial Ending','description':'Triggered 6 days prior to the trial period\'s end date.'},'subscription_activated':{'displayName':'Subscription Activated','description':'Triggered after the subscription has been moved from "Trial" to "Active" state.'},'subscription_changed':{'displayName':'Subscription Changed','description':'Triggered when the subscription\'s recurring items are changed.'},'subscription_cancellation_scheduled':{'displayName':'Subscription Cancellation Scheduled','description':'Triggered when subscription is scheduled to cancel at end of current term.'},'subscription_cancelling':{'displayName':'Subscription Cancelling','description':'Triggered 6 days prior to the scheduled cancellation date.'},'subscription_cancelled':{'displayName':'Subscription Cancelled','description':'Triggered when the subscription is cancelled. If it is cancelled due to non payment or because the card details are not present, the subscription will have the possible reason as "cancel_reason".'},'subscription_reactivated':{'displayName':'Subscription Reactivated','description':'Triggered when the subscription is moved from cancelled state to "Active" or "Trial" state.'},'subscription_renewed':{'displayName':'Subscription Renewed','description':'Triggered when the subscription is renewed from the current term.'},'subscription_scheduled_cancellation_removed':{'displayName':'Subscription Scheduled Cancellation Removed','description':'Triggered when scheduled cancellation is removed for the subscription.'},'subscription_shipping_address_updated':{'displayName':'Subscription Shipping Address Updated','description':'Triggered when shipping address is added or updated for a subscription.'},'subscription_deleted':{'displayName':'Subscription Deleted','description':'Triggered when a subscription is deleted. '},'invoice_created':{'displayName':'Invoice Created','description':'Event triggered (in the case of metered billing) when a "Pending" invoice is created that has usage related charges or line items to be added, before being closed. This is triggered only when the “Notify for Pending Invoices” option is enabled.'},'invoice_generated':{'displayName':'Invoice Generated','description':'Event triggered when a new invoice is generated. In case of metered billing, this event is triggered when a "Pending" invoice is closed.'},'invoice_updated':{'displayName':'Invoice Updated','description':'Triggered when the invoice’s shipping/billing address is updated, if the invoice is voided, or when the amount due is modified due to payments applied/removed.'},'invoice_deleted':{'displayName':'Invoice Deleted','description':'Event triggered when an invoice is deleted.'},'subscription_renewal_reminder':{'displayName':'Subscription Renewal Reminder','description':'Triggered 3 days before each subscription\'s renewal.'},'transaction_created':{'displayName':'Transaction Created','description':'Triggered when a transaction is recorded.'},'transaction_updated':{'displayName':'Transaction Updated','description':'Triggered when a transaction is updated. E.g. (1) When a transaction is removed, (2) or when an excess payment is applied on an invoice, (3) or when amount_capturable gets updated.'},'transaction_deleted':{'displayName':'Transaction Deleted','description':'Triggered when a transaction is deleted.'},'payment_succeeded':{'displayName':'Payment Succeeded','description':'Triggered when the payment is successfully collected.'},'payment_failed':{'displayName':'Payment Failed','description':'Triggered when attempt to charge customer\'s credit card fails.'},'payment_refunded':{'displayName':'Payment Refunded','description':'Triggered when a payment refund is made.'},'payment_initiated':{'displayName':'Payment Initiated','description':'Triggered when a payment is initiated via direct debit.'},'refund_initiated':{'displayName':'Refund Initiated','description':'Triggered when a refund is initiated via direct debit.'},'card_added':{'displayName':'Card Added','description':'Triggered when a card is added for a customer.'},'card_updated':{'displayName':'Card Updated','description':'Triggered when the card is updated for a customer.'},'card_expiring':{'displayName':'Card Expiring','description':'Triggered when the customer\'s credit card is expiring soon.Triggered 30 days before the expiry date.'},'card_expired':{'displayName':'Card Expired','description':'Triggered when the card for a customer has expired.'},'card_deleted':{'displayName':'Card Deleted','description':'Triggered when a card is deleted for a customer.'}}}},'credentials':{}}}};