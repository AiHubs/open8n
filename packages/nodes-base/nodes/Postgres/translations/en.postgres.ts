module.exports = {'en':{'postgres':{'displayName':'Postgres','description':'Gets, add and update data in Postgres.','parameters':{'operation':{'name':'operation','displayName':'Operation','description':'The operation to perform.','options':{'executeQuery':{'displayName':'Execute Query','description':'Execute an SQL query'},'insert':{'displayName':'Insert','description':'Insert rows in database'},'update':{'displayName':'Update','description':'Update rows in database'}}},'query':{'name':'query','displayName':'Query','description':'The SQL query to execute. You can use n8n expressions or $1 and $2 in conjunction with query parameters.','placeholder':'SELECT id, name FROM product WHERE quantity > $1 AND price <= $2','options':{}},'schema':{'name':'schema','displayName':'Schema','description':'Name of the schema the table belongs to','options':{}},'table':{'name':'table','displayName':'Table','description':'Name of the table in which to update data in','options':{}},'columns':{'name':'columns','displayName':'Columns','description':'Comma separated list of the properties which should used as columns for rows to update.<br>You can use type casting with colons (:) like id:int.','placeholder':'name:text,description','options':{}},'updateKey':{'name':'updateKey','displayName':'Update Key','description':'Comma separated list of the properties which decides which rows in the database should be updated. Normally that would be "id".','options':{}},'returnFields':{'name':'returnFields','displayName':'Return Fields','description':'Comma separated list of the fields that the operation will return','options':{}},'additionalFields':{'name':'additionalFields','displayName':'Additional Fields','placeholder':'Add Field','options':{'mode':{'displayName':'Mode','description':'The way queries should be sent to database.<br>Can be used in conjunction with <b>Continue on Fail</b>.<br>See the docs for more examples'},'queryParams':{'displayName':'Query Parameters','description':'Comma separated list of properties which should be used as query parameters.'}}}},'credentials':{'postgres':{'host':{'displayName':'Host'},'database':{'displayName':'Database'},'user':{'displayName':'User'},'password':{'displayName':'Password'},'allowUnauthorizedCerts':{'displayName':'Ignore SSL Issues','description':'Connect even if SSL certificate validation is not possible.'},'ssl':{'displayName':'SSL'},'port':{'displayName':'Port'}}}}}};