module.exports = {'en':{'stripeTrigger':{'displayName':'Stripe Trigger','description':'Handle Stripe events via webhooks','parameters':{'events':{'name':'events','displayName':'Events','description':'The event to listen to.','options':{'*':{'displayName':'*','description':'Any time any event is triggered (Wildcard Event).'},'account.updated':{'displayName':'Account Updated','description':'Occurs whenever an account status or property has changed.'},'account.application.authorized':{'displayName':'Account Application.authorized','description':'Occurs whenever a user authorizes an application. Sent to the related application only.'},'account.application.deauthorized':{'displayName':'Account Application.deauthorized','description':'Occurs whenever a user deauthorizes an application. Sent to the related application only.'},'account.external_account.created':{'displayName':'Account External_account.created','description':'Occurs whenever an external account is created.'},'account.external_account.deleted':{'displayName':'Account External_account.deleted','description':'Occurs whenever an external account is deleted.'},'account.external_account.updated':{'displayName':'Account External_account.updated','description':'Occurs whenever an external account is updated.'},'application_fee.created':{'displayName':'Application Fee.created','description':'Occurs whenever an application fee is created on a charge.'},'application_fee.refunded':{'displayName':'Application Fee.refunded','description':'Occurs whenever an application fee is refunded, whether from refunding a charge or from refunding the application fee directly. This includes partial refunds.'},'application_fee.refund.updated':{'displayName':'Application Fee.refund.updated','description':'Occurs whenever an application fee refund is updated.'},'balance.available':{'displayName':'Balance Available','description':'Occurs whenever your Stripe balance has been updated (e.g., when a charge is available to be paid out). By default, Stripe automatically transfers funds in your balance to your bank account on a daily basis.'},'capability.updated':{'displayName':'Capability Updated','description':'Occurs whenever a capability has new requirements or a new status.'},'charge.captured':{'displayName':'Charge Captured','description':'Occurs whenever a previously uncaptured charge is captured.'},'charge.expired':{'displayName':'Charge Expired','description':'Occurs whenever an uncaptured charge expires.'},'charge.failed':{'displayName':'Charge Failed','description':'Occurs whenever a failed charge attempt occurs.'},'charge.pending':{'displayName':'Charge Pending','description':'Occurs whenever a pending charge is created.'},'charge.refunded':{'displayName':'Charge Refunded','description':'Occurs whenever a charge is refunded, including partial refunds.'},'charge.succeeded':{'displayName':'Charge Succeeded','description':'Occurs whenever a new charge is created and is successful.'},'charge.updated':{'displayName':'Charge Updated','description':'Occurs whenever a charge description or metadata is updated.'},'charge.dispute.closed':{'displayName':'Charge Dispute.closed','description':'Occurs when a dispute is closed and the dispute status changes to lost, warning_closed, or won.'},'charge.dispute.created':{'displayName':'Charge Dispute.created','description':'Occurs whenever a customer disputes a charge with their bank.'},'charge.dispute.funds_reinstated':{'displayName':'Charge Dispute.funds_reinstated','description':'Occurs when funds are reinstated to your account after a dispute is closed. This includes partially refunded payments.'},'charge.dispute.funds_withdrawn':{'displayName':'Charge Dispute.funds_withdrawn','description':'Occurs when funds are removed from your account due to a dispute.'},'charge.dispute.updated':{'displayName':'Charge Dispute.updated','description':'Occurs when the dispute is updated (usually with evidence).'},'charge.refund.updated':{'displayName':'Charge Refund.updated','description':'Occurs whenever a refund is updated, on selected payment methods.'},'checkout.session.completed':{'displayName':'Checkout Session.completed','description':'Occurs when a Checkout Session has been successfully completed.'},'coupon.created':{'displayName':'Coupon Created','description':'Occurs whenever a coupon is created.'},'coupon.deleted':{'displayName':'Coupon Deleted','description':'Occurs whenever a coupon is deleted.'},'coupon.updated':{'displayName':'Coupon Updated','description':'Occurs whenever a coupon is updated.'},'credit_note.created':{'displayName':'Credit Note.created','description':'Occurs whenever a credit note is created.'},'credit_note.updated':{'displayName':'Credit Note.updated','description':'Occurs whenever a credit note is updated.'},'credit_note.voided':{'displayName':'Credit Note.voided','description':'Occurs whenever a credit note is voided.'},'customer.created':{'displayName':'Customer Created','description':'Occurs whenever a new customer is created.'},'customer.deleted':{'displayName':'Customer Deleted','description':'Occurs whenever a customer is deleted.'},'customer.updated':{'displayName':'Customer Updated','description':'Occurs whenever any property of a customer changes.'},'customer.discount.created':{'displayName':'Customer Discount.created','description':'Occurs whenever a coupon is attached to a customer.'},'customer.discount.deleted':{'displayName':'Customer Discount.deleted','description':'Occurs whenever a coupon is removed from a customer.'},'customer.discount.updated':{'displayName':'Customer Discount.updated','description':'Occurs whenever a customer is switched from one coupon to another.'},'customer.source.created':{'displayName':'Customer Source.created','description':'Occurs whenever a new source is created for a customer.'},'customer.source.deleted':{'displayName':'Customer Source.deleted','description':'Occurs whenever a source is removed from a customer.'},'customer.source.expiring':{'displayName':'Customer Source.expiring','description':'Occurs whenever a card or source will expire at the end of the month.'},'customer.source.updated':{'displayName':'Customer Source.updated','description':'Occurs whenever a source\'s details are changed.'},'customer.subscription.created':{'displayName':'Customer Subscription.created','description':'Occurs whenever a customer is signed up for a new plan.'},'customer.subscription.deleted':{'displayName':'Customer Subscription.deleted','description':'Occurs whenever a customer\'s subscription ends.'},'customer.subscription.trial_will_end':{'displayName':'Customer Subscription.trial_will_end','description':'Occurs three days before a subscription\'s trial period is scheduled to end, or when a trial is ended immediately (using trial_end=now).'},'customer.subscription.updated':{'displayName':'Customer Subscription.updated','description':'Occurs whenever a subscription changes (e.g., switching from one plan to another, or changing the status from trial to active).'},'customer.tax_id.created':{'displayName':'Customer Tax_id.created','description':'Occurs whenever a tax ID is created for a customer.'},'customer.tax_id.deleted':{'displayName':'Customer Tax_id.deleted','description':'Occurs whenever a tax ID is deleted from a customer.'},'customer.tax_id.updated':{'displayName':'Customer Tax_id.updated','description':'Occurs whenever a customer\'s tax ID is updated.'},'file.created':{'displayName':'File Created','description':'Occurs whenever a new Stripe-generated file is available for your account.'},'invoice.created':{'displayName':'Invoice Created','description':'Occurs whenever a new invoice is created. To learn how webhooks can be used with this event, and how they can affect it, see Using Webhooks with Subscriptions.'},'invoice.deleted':{'displayName':'Invoice Deleted','description':'Occurs whenever a draft invoice is deleted.'},'invoice.finalized':{'displayName':'Invoice Finalized','description':'Occurs whenever a draft invoice is finalized and updated to be an open invoice.'},'invoice.marked_uncollectible':{'displayName':'Invoice Marked_uncollectible','description':'Occurs whenever an invoice is marked uncollectible.'},'invoice.payment_action_required':{'displayName':'Invoice Payment_action_required','description':'Occurs whenever an invoice payment attempt requires further user action to complete.'},'invoice.payment_failed':{'displayName':'Invoice Payment_failed','description':'Occurs whenever an invoice payment attempt fails, due either to a declined payment or to the lack of a stored payment method.'},'invoice.payment_succeeded':{'displayName':'Invoice Payment_succeeded','description':'Occurs whenever an invoice payment attempt succeeds.'},'invoice.sent':{'displayName':'Invoice Sent','description':'Occurs whenever an invoice email is sent out.'},'invoice.upcoming':{'displayName':'Invoice Upcoming','description':'Occurs X number of days before a subscription is scheduled to create an invoice that is automatically chargedâ€”where X is determined by your subscriptions settings. Note: The received Invoice object will not have an invoice ID.'},'invoice.updated':{'displayName':'Invoice Updated','description':'Occurs whenever an invoice changes (e.g., the invoice amount).'},'invoice.voided':{'displayName':'Invoice Voided','description':'Occurs whenever an invoice is voided.'},'invoiceitem.created':{'displayName':'Invoiceitem Created','description':'Occurs whenever an invoice item is created.'},'invoiceitem.deleted':{'displayName':'Invoiceitem Deleted','description':'Occurs whenever an invoice item is deleted.'},'invoiceitem.updated':{'displayName':'Invoiceitem Updated','description':'Occurs whenever an invoice item is updated.'},'issuing_authorization.created':{'displayName':'Issuing Authorization.created','description':'Occurs whenever an authorization is created.'},'issuing_authorization.request':{'displayName':'Issuing Authorization.request','description':'Represents a synchronous request for authorization, see Using your integration to handle authorization requests.'},'issuing_authorization.updated':{'displayName':'Issuing Authorization.updated','description':'Occurs whenever an authorization is updated.'},'issuing_card.created':{'displayName':'Issuing Card.created','description':'Occurs whenever a card is created.'},'issuing_card.updated':{'displayName':'Issuing Card.updated','description':'Occurs whenever a card is updated.'},'issuing_cardholder.created':{'displayName':'Issuing Cardholder.created','description':'Occurs whenever a cardholder is created.'},'issuing_cardholder.updated':{'displayName':'Issuing Cardholder.updated','description':'Occurs whenever a cardholder is updated.'},'issuing_dispute.created':{'displayName':'Issuing Dispute.created','description':'Occurs whenever a dispute is created.'},'issuing_dispute.updated':{'displayName':'Issuing Dispute.updated','description':'Occurs whenever a dispute is updated.'},'issuing_settlement.created':{'displayName':'Issuing Settlement.created','description':'Occurs whenever an issuing settlement is created.'},'issuing_settlement.updated':{'displayName':'Issuing Settlement.updated','description':'Occurs whenever an issuing settlement is updated.'},'issuing_transaction.created':{'displayName':'Issuing Transaction.created','description':'Occurs whenever an issuing transaction is created.'},'issuing_transaction.updated':{'displayName':'Issuing Transaction.updated','description':'Occurs whenever an issuing transaction is updated.'},'order.created':{'displayName':'Order Created','description':'Occurs whenever an order is created.'},'order.payment_failed':{'displayName':'Order Payment_failed','description':'Occurs whenever an order payment attempt fails.'},'order.payment_succeeded':{'displayName':'Order Payment_succeeded','description':'Occurs whenever an order payment attempt succeeds.'},'order.updated':{'displayName':'Order Updated','description':'Occurs whenever an order is updated.'},'order_return.created':{'displayName':'Order Return.created','description':'Occurs whenever an order return is created.'},'payment_intent.amount_capturable_updated':{'displayName':'Payment Intent.amount_capturable_updated','description':'Occurs when a PaymentIntent has funds to be captured. Check the amount_capturable property on the PaymentIntent to determine the amount that can be captured. You may capture the PaymentIntent with an amount_to_capture value up to the specified amount. Learn more about capturing PaymentIntents.'},'payment_intent.canceled':{'displayName':'Payment Intent.canceled','description':'Occurs when a PaymentIntent is canceled.'},'payment_intent.created':{'displayName':'Payment Intent.created','description':'Occurs when a new PaymentIntent is created.'},'payment_intent.payment_failed':{'displayName':'Payment Intent.payment_failed','description':'Occurs when a PaymentIntent has failed the attempt to create a source or a payment.'},'payment_intent.succeeded':{'displayName':'Payment Intent.succeeded','description':'Occurs when a PaymentIntent has been successfully fulfilled.'},'payment_method.attached':{'displayName':'Payment Method.attached','description':'Occurs whenever a new payment method is attached to a customer.'},'payment_method.card_automatically_updated':{'displayName':'Payment Method.card_automatically_updated','description':'Occurs whenever a card payment method\'s details are automatically updated by the network.'},'payment_method.detached':{'displayName':'Payment Method.detached','description':'Occurs whenever a payment method is detached from a customer.'},'payment_method.updated':{'displayName':'Payment Method.updated','description':'Occurs whenever a payment method is updated via the PaymentMethod update API.'},'payout.canceled':{'displayName':'Payout Canceled','description':'Occurs whenever a payout is canceled.'},'payout.created':{'displayName':'Payout Created','description':'Occurs whenever a payout is created.'},'payout.failed':{'displayName':'Payout Failed','description':'Occurs whenever a payout attempt fails.'},'payout.paid':{'displayName':'Payout Paid','description':'Occurs whenever a payout is expected to be available in the destination account. If the payout fails, a payout.failed notification is also sent, at a later time.'},'payout.updated':{'displayName':'Payout Updated','description':'Occurs whenever a payout is updated.'},'person.created':{'displayName':'Person Created','description':'Occurs whenever a person associated with an account is created.'},'person.deleted':{'displayName':'Person Deleted','description':'Occurs whenever a person associated with an account is deleted.'},'person.updated':{'displayName':'Person Updated','description':'Occurs whenever a person associated with an account is updated.'},'plan.created':{'displayName':'Plan Created','description':'Occurs whenever a plan is created.'},'plan.deleted':{'displayName':'Plan Deleted','description':'Occurs whenever a plan is deleted.'},'plan.updated':{'displayName':'Plan Updated','description':'Occurs whenever a plan is updated.'},'product.created':{'displayName':'Product Created','description':'Occurs whenever a product is created.'},'product.deleted':{'displayName':'Product Deleted','description':'Occurs whenever a product is deleted.'},'product.updated':{'displayName':'Product Updated','description':'Occurs whenever a product is updated.'},'radar.early_fraud_warning.created':{'displayName':'Radar Early_fraud_warning.created','description':'Occurs whenever an early fraud warning is created.'},'radar.early_fraud_warning.updated':{'displayName':'Radar Early_fraud_warning.updated','description':'Occurs whenever an early fraud warning is updated.'},'recipient.created':{'displayName':'Recipient Created','description':'Occurs whenever a recipient is created.'},'recipient.deleted':{'displayName':'Recipient Deleted','description':'Occurs whenever a recipient is deleted.'},'recipient.updated':{'displayName':'Recipient Updated','description':'Occurs whenever a recipient is updated.'},'reporting.report_run.failed':{'displayName':'Reporting Report_run.failed','description':'Occurs whenever a requested **ReportRun** failed to complete.'},'reporting.report_run.succeeded':{'displayName':'Reporting Report_run.succeeded','description':'Occurs whenever a requested **ReportRun** completed succesfully.'},'reporting.report_type.updated':{'displayName':'Reporting Report_type.updated','description':'Occurs whenever a **ReportType** is updated (typically to indicate that a new day\'s data has come available).'},'review.closed':{'displayName':'Review Closed','description':'Occurs whenever a review is closed. The review\'s reason field indicates why: approved, disputed, refunded, or refunded_as_fraud.'},'review.opened':{'displayName':'Review Opened','description':'Occurs whenever a review is opened.'},'setup_intent.canceled':{'displayName':'Setup Intent.canceled','description':'Occurs when a SetupIntent is canceled.'},'setup_intent.created':{'displayName':'Setup Intent.created','description':'Occurs when a new SetupIntent is created.'},'setup_intent.setup_failed':{'displayName':'Setup Intent.setup_failed','description':'Occurs when a SetupIntent has failed the attempt to setup a payment method.'},'setup_intent.succeeded':{'displayName':'Setup Intent.succeeded','description':'Occurs when an SetupIntent has successfully setup a payment method.'},'sigma.scheduled_query_run.created':{'displayName':'Sigma Scheduled_query_run.created','description':'Occurs whenever a Sigma scheduled query run finishes.'},'sku.created':{'displayName':'Sku Created','description':'Occurs whenever a SKU is created.'},'sku.deleted':{'displayName':'Sku Deleted','description':'Occurs whenever a SKU is deleted.'},'sku.updated':{'displayName':'Sku Updated','description':'Occurs whenever a SKU is updated.'},'source.canceled':{'displayName':'Source Canceled','description':'Occurs whenever a source is canceled.'},'source.chargeable':{'displayName':'Source Chargeable','description':'Occurs whenever a source transitions to chargeable.'},'source.failed':{'displayName':'Source Failed','description':'Occurs whenever a source fails.'},'source.mandate_notification':{'displayName':'Source Mandate_notification','description':'Occurs whenever a source mandate notification method is set to manual.'},'source.refund_attributes_required':{'displayName':'Source Refund_attributes_required','description':'Occurs whenever the refund attributes are required on a receiver source to process a refund or a mispayment.'},'source.transaction.created':{'displayName':'Source Transaction.created','description':'Occurs whenever a source transaction is created.'},'source.transaction.updated':{'displayName':'Source Transaction.updated','description':'Occurs whenever a source transaction is updated.'},'subscription_schedule.aborted':{'displayName':'Subscription Schedule.aborted','description':'Occurs whenever a subscription schedule is canceled due to the underlying subscription being canceled because of delinquency.'},'subscription_schedule.canceled':{'displayName':'Subscription Schedule.canceled','description':'Occurs whenever a subscription schedule is canceled.'},'subscription_schedule.completed':{'displayName':'Subscription Schedule.completed','description':'Occurs whenever a new subscription schedule is completed.'},'subscription_schedule.created':{'displayName':'Subscription Schedule.created','description':'Occurs whenever a new subscription schedule is created.'},'subscription_schedule.expiring':{'displayName':'Subscription Schedule.expiring','description':'Occurs 7 days before a subscription schedule will expire.'},'subscription_schedule.released':{'displayName':'Subscription Schedule.released','description':'Occurs whenever a new subscription schedule is released.'},'subscription_schedule.updated':{'displayName':'Subscription Schedule.updated','description':'Occurs whenever a subscription schedule is updated.'},'tax_rate.created':{'displayName':'Tax Rate.created','description':'Occurs whenever a new tax rate is created.'},'tax_rate.updated':{'displayName':'Tax Rate.updated','description':'Occurs whenever a tax rate is updated.'},'topup.canceled':{'displayName':'Topup Canceled','description':'Occurs whenever a top-up is canceled.'},'topup.created':{'displayName':'Topup Created','description':'Occurs whenever a top-up is created.'},'topup.failed':{'displayName':'Topup Failed','description':'Occurs whenever a top-up fails.'},'topup.reversed':{'displayName':'Topup Reversed','description':'Occurs whenever a top-up is reversed.'},'topup.succeeded':{'displayName':'Topup Succeeded','description':'Occurs whenever a top-up succeeds.'},'transfer.created':{'displayName':'Transfer Created','description':'Occurs whenever a transfer is created.'},'transfer.failed':{'displayName':'Transfer Failed','description':'Occurs whenever a transfer failed.'},'transfer.paid':{'displayName':'Transfer Paid','description':'Occurs after a transfer is paid. For Instant Payouts, the event will be sent on the next business day, although the funds should be received well beforehand.'},'transfer.reversed':{'displayName':'Transfer Reversed','description':'Occurs whenever a transfer is reversed, including partial reversals.'},'transfer.updated':{'displayName':'Transfer Updated','description':'Occurs whenever a transfer\'s description or metadata is updated.'}}}},'credentials':{'stripeApi':{'secretKey':{'displayName':'Secret Key'}}}}}};