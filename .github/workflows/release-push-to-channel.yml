name: 'Release: Push to Channel'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'n8n Release version to push to a channel'
        required: true

      release-channel:
        description: 'Release channel'
        required: true
        type: choice
        default: 'beta'
        options:
          - beta
          - stable

jobs:
  release-to-npm:
    name: Release to NPM
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/setup-node@v4.2.0
        with:
          node-version: 20.x

      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - if: github.event.inputs.release-channel == 'beta'
        run: |
          npm dist-tag add n8n@${{ github.event.inputs.version }} next
          npm dist-tag add n8n@${{ github.event.inputs.version }} beta

      - if: github.event.inputs.release-channel == 'stable'
        run: |
          npm dist-tag add n8n@${{ github.event.inputs.version }} latest
          npm dist-tag add n8n@${{ github.event.inputs.version }} stable

  release-to-docker-hub:
    name: Release to DockerHub
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - if: github.event.inputs.release-channel == 'stable'
        run: |
          docker buildx imagetools create -t ${{ secrets.DOCKER_USERNAME }}/n8n-plus:stable ${{ secrets.DOCKER_USERNAME }}/n8n-plus:${{ github.event.inputs.version }}
          docker buildx imagetools create -t ${{ secrets.DOCKER_USERNAME }}/n8n-plus:latest ${{ secrets.DOCKER_USERNAME }}/n8n-plus:${{ github.event.inputs.version }}

      - if: github.event.inputs.release-channel == 'beta'
        run: |
          docker buildx imagetools create -t ${{ secrets.DOCKER_USERNAME }}/n8n-plus:beta ${{ secrets.DOCKER_USERNAME }}/n8n-plus:${{ github.event.inputs.version }}
          docker buildx imagetools create -t ${{ secrets.DOCKER_USERNAME }}/n8n-plus:next ${{ secrets.DOCKER_USERNAME }}/n8n-plus:${{ github.event.inputs.version }}

  release-to-github-container-registry:
    name: Release to GitHub Container Registry
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - if: github.event.inputs.release-channel == 'stable'
        run: |
          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/n8n-plus:stable ghcr.io/${{ github.repository_owner }}/n8n-plus:${{ github.event.inputs.version }}
          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/n8n-plus:latest ghcr.io/${{ github.repository_owner }}/n8n-plus:${{ github.event.inputs.version }}

      - if: github.event.inputs.release-channel == 'beta'
        run: |
          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/n8n-plus:beta ghcr.io/${{ github.repository_owner }}/n8n-plus:${{ github.event.inputs.version }}
          docker buildx imagetools create -t ghcr.io/${{ github.repository_owner }}/n8n-plus:next ghcr.io/${{ github.repository_owner }}/n8n-plus:${{ github.event.inputs.version }}
