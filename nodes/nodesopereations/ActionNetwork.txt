TextBlock(text="Authentication Methods:\nTask 1: Implement the authentication mechanism for the ActionNetwork node.\n- The node requires an API credential named 'actionNetworkApi' to authenticate with the Action Network API.\n- Ensure that the user has provided a valid 'actionNetworkApi' credential before proceeding with any operations.\n\nInput Parameters:\nTask 2: Understand and handle the input parameters for the ActionNetwork node.\n- The primary input parameter is 'resource', which is a required option field that determines the resource to be operated on (e.g., 'attendance', 'event', 'person', 'personTag', 'petition', 'signature', or 'tag').\n- Based on the selected 'resource', additional input parameters are dynamically displayed, such as 'operation', 'personId', 'eventId', 'attendanceId', 'petitionId', 'signatureId', 'tagId', 'taggingId', 'originSystem', 'title', 'email_addresses', 'additionalFields', and 'updateFields'.\n- Ensure that all required input parameters are provided based on the selected 'resource' and 'operation'.\n\nOutput Structure:\nTask 3: Understand and handle the output structure of the ActionNetwork node.\n- The output structure depends on the selected 'operation' and whether the 'simple' parameter is set to 'true' or 'false'.\n- If 'simple' is 'true', the output is simplified to include only essential fields for the selected 'resource'.\n- If 'simple' is 'false', the output includes the complete response from the Action Network API.\n- The output can be either a single object or an array of objects, depending on the 'operation'.\n\nSupported Operations:\nTask 4: Implement the supported operations for each resource in the ActionNetwork node.\n- Attendance: 'create', 'get', 'getAll'\n- Event: 'create', 'get', 'getAll'\n- Person: 'create', 'get', 'getAll', 'update'\n- Petition: 'create', 'get', 'getAll', 'update'\n- Signature: 'create', 'get', 'getAll', 'update'\n- Tag: 'create', 'get', 'getAll'\n- PersonTag: 'add', 'remove'\n\nRequired Parameters:\nTask 5: Ensure that the required parameters are provided for each operation.\n- For 'create' operations, ensure that the required fields ('originSystem', 'title', 'email_addresses', etc.) are provided.\n- For 'get' operations, ensure that the required identifier ('eventId', 'personId', 'petitionId', 'signatureId', 'tagId') is provided.\n- For 'getAll' operations, ensure that any required filtering parameters are provided (if applicable).\n- For 'update' operations, ensure that at least one field is provided in the 'updateFields' parameter.\n- For 'add' and 'remove' operations in 'personTag', ensure that the required identifiers ('personId', 'tagId', 'taggingId') are provided.\n\nError Handling Mechanisms:\nTask 6: Implement error handling mechanisms for the ActionNetwork node.\n- If an error occurs during the execution of an operation, the system should handle it gracefully.\n- If the 'continueOnFail' parameter is set to 'true', the system should log the error and continue processing the remaining items.\n- If the 'continueOnFail' parameter is set to 'false' (default), the system should throw the error and stop executing the current workflow.\n- Specific error handling is implemented for scenarios like missing required parameters or invalid input values.\n\nHeadings:\n1. Authentication Methods\n2. Input Parameters\n3. Output Structure\n4. Supported Operations\n5. Required Parameters\n6. Error Handling Mechanisms", type='text')