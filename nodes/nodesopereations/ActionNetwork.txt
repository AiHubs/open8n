TextBlock(text='Purpose and Main Functionality:\nThe ActionNetwork node is designed to interact with the Action Network API, which is a platform for organizing and managing activism campaigns, events, and petitions. The node\'s main purpose is to enable the system to create, retrieve, update, and manage various resources provided by the Action Network API, such as events, attendances, people, petitions, signatures, tags, and person-tag associations.\n\nInput Parameters:\nThe node accepts several input parameters, which are dynamically displayed based on the selected resource and operation. These parameters include:\n\n- Resource: The specific resource to interact with (e.g., attendance, event, person, petition, signature, tag, personTag).\n- Operation: The operation to perform on the selected resource (e.g., create, get, getAll, update, add, remove).\n- Specific parameters related to the selected resource and operation, such as event details, person information, petition content, and tag names.\n\nOutput Structure:\nThe output structure of the node depends on the selected operation and whether the "simple" parameter is enabled or not. If the "simple" parameter is enabled, the output will be a simplified version of the API response. Otherwise, the full API response will be returned.\n\nSupported Operations:\nThe ActionNetwork node supports various operations for each resource, including:\n\n- Attendance: create, get, getAll\n- Event: create, get, getAll\n- Person: create, get, getAll, update\n- Petition: create, get, getAll, update\n- Signature: create, get, getAll, update\n- Tag: create, get, getAll\n- PersonTag: add, remove\n\nNotable Features and Limitations:\n- The node integrates with the Action Network API, allowing users to leverage its features for managing activism campaigns, events, and petitions.\n- The node supports a wide range of operations for different resources, enabling users to perform various tasks related to event management, user tracking, and petition handling.\n- The node provides error handling mechanisms to gracefully handle failures and optionally continue the workflow execution.\n- The node does not currently support advanced filtering or sorting options for the "getAll" operations.\n\nIntegration Points:\nThe ActionNetwork node can be integrated with other nodes in the system\'s workflow to facilitate data exchange and automate processes. For example, it can be combined with nodes for email marketing, data transformation, or storage to create comprehensive activism management workflows.\n\nError Handling Mechanisms:\nThe node implements error handling mechanisms to gracefully handle failures. If an error occurs during the execution, the node will either throw an error or continue the workflow execution based on the user\'s preference. Errors are logged and can be displayed in the system\'s interface for troubleshooting purposes.\n\nAdditional Information:\n- The node requires valid Action Network API credentials to authenticate and interact with the API.\n- The node supports dynamic option loading for certain parameters, allowing users to select values from pre-populated lists fetched from the API.\n- The node provides detailed descriptions and help text for each parameter to assist users in configuring the node correctly.\n- The node is designed to be easily extendable, allowing for future updates and support for additional resources or operations provided by the Action Network API.', type='text')