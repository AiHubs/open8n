TextBlock(text='Node Name and Description:\nThe node is called "AiTransform" and its purpose is to modify data based on instructions written in plain English. It allows users to provide natural language instructions for transforming input data, which the system then converts into executable code.\n\nInput Parameters:\n1. Instructions: This is a text field where users enter their instructions in plain English on how they want to transform the data. It includes a button labeled "Generate code" that triggers the code generation process based on the provided instructions.\n2. Transformation Code: This is a read-only field that displays the generated code based on the user\'s instructions. Users can copy and paste this code into a Code node if they want to modify it further.\n\nOutput Structure:\nThe node returns an array of transformed items, where each item is an object containing the transformed data in the "json" property.\n\nSupported Operations and Required Parameters:\nThe main operation of this node is to transform input data based on the user\'s instructions. The required parameter is the "Instructions" field, where users provide their natural language instructions for the desired transformation.\n\nAuthentication Methods:\nThis node does not require any authentication.\n\nError Handling Mechanisms:\nThe node has several error handling mechanisms in place:\n\n1. If the "Instructions" parameter is empty, it throws a NodeOperationError with a description prompting the user to enter instructions and click "Generate code".\n2. If the generated code is missing (the "jsCode" parameter is empty), it throws a NodeOperationError with a description prompting the user to click the "Generate code" button.\n3. If any other error occurs during code execution, it catches the error and either throws a NodeOperationError (if "continueOnFail" is false) or returns an item with the error message in the "json.error" property (if "continueOnFail" is true).\n\nImportant Details:\n1. The node uses a JavaScript Sandbox environment to execute the generated code in a secure and isolated manner.\n2. The generated code can access the input data through the "items" property in the sandbox context.\n3. The node supports both manual and non-manual workflow modes, with different output handling mechanisms (sending messages to the UI or logging to the console, respectively).\n4. The node standardizes the output by calling the "standardizeOutput" function on each item\'s "json" property before returning the transformed data.\n\nUsage:\nTo use this node, follow these steps:\n\n1. Enter your instructions for transforming the data in the "Instructions" field.\n2. Click the "Generate code" button to generate the transformation code based on your instructions.\n3. Review the generated code in the "Transformation Code" field. If needed, copy and paste it into a Code node for further modifications.\n4. Click the "Test step" button to run the transformation code and see the transformed data.\n5. For subsequent executions, the system will use the generated code without invoking the AI again.', type='text')