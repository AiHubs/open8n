TextBlock(text='Node Name and Description:\nActiveCampaignTrigger is a trigger node that handles ActiveCampaign events via webhooks. It allows the system to listen for specific events from ActiveCampaign and trigger workflows based on those events.\n\nInput Parameters:\n1. Event Names or IDs (events): A multi-option field that allows selecting one or more events from ActiveCampaign to listen for. The options are loaded dynamically from the ActiveCampaign API.\n2. Source (sources): A multi-option field that specifies the source of the events. The available options are:\n   - Public: Run the hooks when a contact triggers the action.\n   - Admin: Run the hooks when an admin user triggers the action.\n   - Api: Run the hooks when an API call triggers the action.\n   - System: Run the hooks when automated systems trigger the action.\n\nOutput Structure:\nThe node outputs the event data received from ActiveCampaign webhooks as an array of JSON objects in the main output.\n\nSupported Operations:\n1. Webhook Subscription:\n   - checkExists: Checks if a webhook subscription already exists for the current node.\n   - create: Creates a new webhook subscription with ActiveCampaign based on the configured events and sources.\n   - delete: Deletes the existing webhook subscription for the current node.\n\n2. Webhook Receiver:\n   - webhook: Receives the webhook payload from ActiveCampaign and returns it as the output data.\n\nAuthentication Methods:\nThe node requires an ActiveCampaign API credential named \'activeCampaignApi\' to authenticate with the ActiveCampaign API.\n\nError Handling Mechanisms:\nThe node handles errors by catching exceptions and returning appropriate error responses. For example, if the webhook subscription creation or deletion fails, the corresponding methods return false, indicating the failure.\n\nImportant Details:\n1. The node uses the activeCampaignApiRequest and activeCampaignApiRequestAllItems helper functions to interact with the ActiveCampaign API.\n2. The node stores the webhook ID in the node\'s workflow static data to manage the webhook subscription lifecycle.\n3. The getEvents method is used to load the available events from ActiveCampaign and populate the \'events\' input parameter options dynamically.\n4. The webhook subscription is created with a unique name based on the node\'s webhook URL and the configured events and sources.\n5. The node listens for POST requests on the \'/webhook\' path to receive webhook payloads from ActiveCampaign.\n\nUsage:\n1. Configure the required ActiveCampaign API credentials in the system.\n2. Set up the ActiveCampaignTrigger node in a workflow.\n3. Select the desired events and sources to listen for from ActiveCampaign.\n4. Connect the node\'s output to subsequent nodes in the workflow to process the received event data.\n\nNote: Replace any mentions of "n8n" with "system" in the provided code and analysis.', type='text')