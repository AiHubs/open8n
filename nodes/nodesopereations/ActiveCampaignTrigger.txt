TextBlock(text='Node Name and Description\nThe node is named "ActiveCampaignTrigger" and its description states that it is used to "Handle ActiveCampaign events via webhooks." This node is part of the trigger group in the system, meaning it is designed to listen for and respond to specific events or triggers from the ActiveCampaign platform.\n\nInput Parameters\nThe node has two input parameters:\n\n1. "Event Names or IDs": This is a multi-option input where the user can select one or more events from ActiveCampaign that they want to listen for. The options are loaded dynamically from the ActiveCampaign API.\n\n2. "Source": This is another multi-option input where the user can specify the source of the event. The available options are:\n   - Public: Run the hooks when a contact triggers the action.\n   - Admin: Run the hooks when an admin user triggers the action.\n   - Api: Run the hooks when an API call triggers the action.\n   - System: Run the hooks when automated systems trigger the action.\n\nOutput Structure\nThe node does not have any specific output structure defined. Instead, it listens for webhook events from ActiveCampaign and passes the received data to the next node in the workflow. The received data is likely to be an array of objects, with each object representing an individual event or trigger from ActiveCampaign.\n\nSupported Operations and Required Parameters\n\n1. Webhook Setup:\n   - The node automatically sets up a webhook URL for listening to ActiveCampaign events.\n   - It creates a new webhook in ActiveCampaign with the specified events and sources.\n   - The webhook URL and ID are stored in the workflow\'s static data.\n\n2. Webhook Deletion:\n   - When the workflow is deactivated or the node is deleted, the node automatically removes the corresponding webhook from ActiveCampaign.\n\nAuthentication Methods\nThe node requires an ActiveCampaign API credential to be configured in the system. This credential is likely an API key or token that allows the node to authenticate with the ActiveCampaign API and perform the necessary operations.\n\nError Handling Mechanisms\nThe node does not appear to have any explicit error handling mechanisms described in the code. However, it uses try-catch blocks when interacting with the ActiveCampaign API, which could be used to catch and handle any errors that may occur during API requests.\n\nAdditional Important Details\n- The node uses the `activeCampaignApiRequest` and `activeCampaignApiRequestAllItems` functions from the `GenericFunctions` module to interact with the ActiveCampaign API.\n- The node is designed to work with the ActiveCampaign API version 3, as indicated by the API endpoint URLs.\n- The node uses the `checkExists` method to check if a webhook already exists for the current workflow. If a webhook exists, it will not create a new one.\n- The `create` method is responsible for creating a new webhook in ActiveCampaign with the specified events and sources.\n- The `delete` method is used to remove the webhook from ActiveCampaign when the workflow is deactivated or the node is deleted.\n- The `webhook` method is the main entry point for receiving and processing incoming webhook events from ActiveCampaign. It returns the received data as an array of JSON objects.', type='text')