TextBlock(text='Node Name and Description\nThe node is called "Affinity" and it is designed to interact with the Affinity API. The node allows users to consume the Affinity API and perform various operations related to organizations, persons, lists, and list entries.\n\nInput Parameters\nThe node accepts the following input parameters:\n\n1. Resource (options: List, List Entry, Organization, Person)\n2. Operation (varies based on the selected resource)\n3. Additional parameters specific to the selected operation and resource\n\nOutput Structure\nThe output structure of the node depends on the selected operation and resource. It typically returns the response data from the Affinity API in JSON format.\n\nSupported Operations and Required Parameters\n\nList Operations:\n- Get: Retrieves a specific list by ID (requires listId).\n- Get All: Retrieves all lists (optional: returnAll to return all lists, limit to specify the maximum number of lists to return).\n\nList Entry Operations:\n- Create: Creates a new list entry (requires listId, entityId, and optional additionalFields).\n- Get: Retrieves a specific list entry by ID (requires listId and listEntryId).\n- Get All: Retrieves all list entries for a given list (requires listId, optional returnAll and limit).\n- Delete: Deletes a specific list entry (requires listId and listEntryId).\n\nPerson Operations:\n- Create: Creates a new person (requires firstName, lastName, emails, and optional additionalFields).\n- Update: Updates an existing person (requires personId, emails, and optional updateFields).\n- Get: Retrieves a specific person by ID (requires personId and optional options).\n- Get All: Retrieves all persons (optional returnAll, limit, and options).\n- Delete: Deletes a specific person (requires personId).\n\nOrganization Operations:\n- Create: Creates a new organization (requires name, domain, and optional additionalFields).\n- Update: Updates an existing organization (requires organizationId and optional updateFields).\n- Get: Retrieves a specific organization by ID (requires organizationId and optional options).\n- Get All: Retrieves all organizations (optional returnAll, limit, and options).\n- Delete: Deletes a specific organization (requires organizationId).\n\nAuthentication Methods\nThe node requires an Affinity API credential to authenticate with the Affinity API. This credential must be configured and provided for the node to function correctly.\n\nError Handling Mechanisms\nThe node implements error handling mechanisms using try-catch blocks. If an error occurs during the execution, the system will handle it based on the "continueOnFail" setting. If continueOnFail is enabled, the system will continue to the next item, and the error will be included in the output data. If continueOnFail is disabled, the system will throw an error and stop the execution.\n\nImportant Details and Usage\n- The node provides a comprehensive set of operations to interact with the Affinity API, covering the management of organizations, persons, lists, and list entries.\n- The node utilizes helper functions (e.g., affinityApiRequest, affinityApiRequestAllItems) to make API requests to the Affinity API.\n- The node includes methods to load options dynamically, allowing users to select from available organizations, persons, and lists.\n- The node supports pagination and filtering options for certain operations, such as retrieving all persons or organizations.\n- The node follows the Affinity API documentation and structures the input parameters and output data accordingly.', type='text')