TextBlock(text='Node Name and Description:\nThe node is called "AcuitySchedulingTrigger" and it is designed to handle events from the Acuity Scheduling service via webhooks. It allows the system to react to various appointment and order-related events, such as appointments being scheduled, rescheduled, changed, or canceled, as well as orders being completed.\n\nInput Parameters:\n1. Authentication (required): Specifies the authentication method, either "API Key" or "OAuth2".\n2. Event (required): The type of event to trigger the webhook. Options include appointment.canceled, appointment.changed, appointment.rescheduled, appointment.scheduled, and order.completed.\n3. Resolve Data (optional, default: true): Determines whether the webhook data should contain only the ID of the object or resolve the full data automatically.\n\nOutput Structure:\nThe output structure is a single item in the "Main" output, containing the resolved data from the Acuity Scheduling API. The data is in JSON format, representing the appointment or order object based on the triggered event.\n\nSupported Operations:\n1. Webhook: Receives the webhook payload from Acuity Scheduling and processes it based on the configured event and "Resolve Data" parameter.\n2. checkExists: Checks if a webhook for the current node configuration already exists in Acuity Scheduling.\n3. create: Creates a new webhook in Acuity Scheduling with the specified event and the system\'s webhook URL.\n4. delete: Deletes the existing webhook from Acuity Scheduling.\n\nAuthentication Methods:\n1. API Key: Requires an Acuity Scheduling API key credential.\n2. OAuth2: Requires an Acuity Scheduling OAuth2 credential.\n\nError Handling:\nThe node implements basic error handling mechanisms. For example, in the delete operation, if the webhook deletion fails, it returns false. However, no explicit error handling or logging is mentioned in the provided code.\n\nImportant Details:\n1. The node uses the "acuitySchedulingApiRequest" function from the "GenericFunctions" module to make API requests to Acuity Scheduling.\n2. The node stores the webhook ID in the workflow\'s static data to manage the webhook lifecycle.\n3. The node supports both API key and OAuth2 authentication methods for Acuity Scheduling.\n4. The node can be used as a trigger in the system, allowing workflows to be triggered by various Acuity Scheduling events.\n5. The "Resolve Data" parameter determines whether the webhook data should include only the object ID or the full resolved data from the Acuity Scheduling API.\n\nUsage:\nThis node can be used in the system to trigger workflows based on events from Acuity Scheduling, such as appointment bookings, changes, or cancellations, as well as order completions. It can be configured to use either API key or OAuth2 authentication, and the "Resolve Data" parameter allows controlling the amount of data included in the webhook payload.', type='text')