@Library('ttt-cd-utils') _


pipeline {
    agent {
        label 'jnlp-hasura-n8n'
    }
    environment {
        ALIYUN_CREDS = credentials('aliyun-acr')
        K8S_CONFIG = credentials('ali-staging-kube-config')
        GIT_TAG = sh(returnStdout: true,script: 'git tag --sort=taggerdate | tail -1').trim()
    }
    stages {
        stage('Clone') {
           steps {
               echo "Clone Git Code"
               checkout([$class: 'GitSCM', branches: [[name: '*/chase']], extensions: [], userRemoteConfigs: [[credentialsId: 'chase', url: 'https://github.com/Top20Talent/n8n.git']]])
           }
        }
        stage('Build Image') {
            when { 
                allOf {
                    expression { env.GIT_TAG != null }
                }
            }
            steps {
                container ('tools') {
                    sh "docker login -u ${ALIYUN_CREDS_USR} -p ${ALIYUN_CREDS_PSW} registry.cn-shanghai.aliyuncs.com"
                    sh "ls -l"
									  sh "echo ${GIT_TAG}"
                    sh "docker build -t registry.cn-shanghai.aliyuncs.com/cgp-tech/n8n:${GIT_TAG} ."
                    sh "docker push registry.cn-shanghai.aliyuncs.com/cgp-tech/n8n:${GIT_TAG}"
                    sh "docker rmi registry.cn-shanghai.aliyuncs.com/cgp-tech/n8n:${GIT_TAG}"
                }
            }
            
        }
        stage('Staging Deployment') {
            when { 
                allOf {
                    expression { env.GIT_TAG != null }
                }
            }
            steps {
                container ('tools') {
                    sh "mkdir -p ~/.kube"
                    sh "cp ${K8S_CONFIG} ~/.kube/config"
                    sh "kubectl get nodes"
                    sh "sed -i 's/GIT_TAG/${GIT_TAG}/g' deploy/charts/n8n/templates/stage/deployment.yaml"
                    sh "kubectl apply -f deploy/charts/n8n/templates/stage/deployment.yaml"
                }
            }
        }
        stage('Confirm production deployment') {
             steps {
                 input message: 'Confirm production deployment?', ok: 'Confirm'
             }
        }
        stage('Production Deployment') {
            when { 
                allOf {
                    expression { env.GIT_TAG != null }
                }
            }
            steps {
                container ('tools') {
                    sh "mkdir -p ~/.kube"
                    sh "cp ${K8S_CONFIG} ~/.kube/config"
                    sh "kubectl get nodes"
                    sh "sed -i 's/GIT_TAG/${GIT_TAG}/g' deploy/charts/n8n/templates/prod/deployment.yaml"
                    sh "kubectl apply -f deploy/charts/n8n/templates/prod/deployment.yaml"
                }
            }
        }
        
    }
    post {
        success { script { notify.success() } }
        failure { script { notify.failure() } }
    }
}
